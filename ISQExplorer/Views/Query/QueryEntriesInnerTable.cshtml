@model IEnumerable<ISQExplorer.Models.ISQEntryModel>

@{
    Layout = null;

    string GpaToStyle(double gpa)
    {
        var hue = (int) (gpa / 4.00 * 100.0);
        return $"color: hsl({hue}, 100%, 35%)";
    }

    string GpaToLetter(double gpa)
    {
        if (gpa < 0.50)
        {
            return "F";
        }
        if (gpa < 1.00)
        {
            return "F/D";
        }
        if (gpa < 1.50)
        {
            return "D";
        }
        if (gpa < 2.00)
        {
            return "D/C";
        }
        if (gpa < 2.50)
        {
            return "C";
        }
        if (gpa < 3.00)
        {
            return "C/B";
        }
        if (gpa < 3.50)
        {
            return "B";
        }
        return "B/A";
    }

    string RatingToStyle(double rating)
    {
        var hue = (int) ((rating - 1.00) / 4.00 * 100.0);
        return $"color: hsl({hue}, 100%, 35%)";
    }

}

<table class="table w-100">
    <tbody>
    <tr>
        <th>Term</th>
        <th>CRN</th>
        <th>Course</th>
        <th>Professor</th>
        <th>Number Responded / Enrolled</th>
        <th>Percent Responded</th>
        <th>Average Rating</th>
        <th>Average GPA</th>
    </tr>
    @foreach (var mod in Model)
    {
        var avgRating = mod.Pct5 * 0.05 + mod.Pct4 * 0.04 + mod.Pct3 * 0.03 + mod.Pct2 * 0.02 + mod.Pct1 * 0.01;

        <tr>
            <td>@(new Term(mod.Season, mod.Year))</td>
            <td>@mod.Crn</td>
            <td>@mod.Course?.CourseCode</td>
            <td>@mod.Professor?.LastName</td>
            <td>@mod.NResponded/@mod.NEnrolled</td>
            <td>@((100.0 * mod.NResponded / mod.NEnrolled).ToString("#.00"))</td>
            <td style="@RatingToStyle(avgRating)">@avgRating.ToString("#.00")</td>
            <td style="@GpaToStyle(mod.MeanGpa)">@mod.MeanGpa.ToString("#.00")</td>
        </tr>
    }
    </tbody>
</table>